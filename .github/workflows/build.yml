name: build app

run-name: ${{ github.actor }} is building

on: [push]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Cache node modules
  #       id: cache-npm
  #       uses: actions/cache@v3
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: ~/.npm
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-
  #     - name: install dependencies
  #       run: npm install
  #         npm run build
  # tests:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Cache node modules
  #       id: cache-npm
  #       uses: actions/cache@v3
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: ~/.npm
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-
  #     - name: install dependencies
  #       run: npm install
  #     - run: npm run e2e:headless
  #     - uses: actions/upload-artifact@v3
  #       if: ${{ always() }}
  #       with:
  #         name: e2e-tests
  #         path: cypress/videos
  # deploy:
  #   needs: tests
  #   runs-on: ubuntu-latest
  #   name: ${{ github.actor }} is deploying
  #   steps:
  #     - uses: webfactory/ssh-agent@v0.8.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_KEY }}
  #     - run: ssh -o StrictHostKeyChecking=no
  #         ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
  #         git clone https://github.com/LaMouettas/devops-course.git
  #         cd devops-course && \
  #         git pull && \
  #         npm-install && \
  #         npm run build && \
  #         pm2 restart all"
  login:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITH_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nextcicd:latest

